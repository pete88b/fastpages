<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://pete88b.github.io/fastpages/feed.xml" rel="self" type="application/atom+xml" /><link href="https://pete88b.github.io/fastpages/" rel="alternate" type="text/html" /><updated>2020-07-28T08:01:08-05:00</updated><id>https://pete88b.github.io/fastpages/feed.xml</id><title type="html">fastpages</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Things you might not know you can do with nbdev</title><link href="https://pete88b.github.io/fastpages/nbdev/fastai/jupyter/2020/07/24/nbdev-deep-dive.html" rel="alternate" type="text/html" title="Things you might not know you can do with nbdev" /><published>2020-07-24T00:00:00-05:00</published><updated>2020-07-24T00:00:00-05:00</updated><id>https://pete88b.github.io/fastpages/nbdev/fastai/jupyter/2020/07/24/nbdev-deep-dive</id><content type="html" xml:base="https://pete88b.github.io/fastpages/nbdev/fastai/jupyter/2020/07/24/nbdev-deep-dive.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-24-nbdev-deep-dive.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;What follows is a collection of things I've learned while trying to help answer questions on the forum, fix issues and introduce magic flags. Hope it helps to know that you can ...&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Use-magic-flags-in-place-of-special-comments&quot;&gt;Use magic flags in place of special comments&lt;a class=&quot;anchor-link&quot; href=&quot;#Use-magic-flags-in-place-of-special-comments&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Using nbdev 0.2.20 from &lt;a href=&quot;https://pypi.org/project/nbdev/&quot;&gt;pypi&lt;/a&gt;, you can start using magic flags like &lt;code&gt;%nbdev_export&lt;/code&gt; in place of special comments like &lt;code&gt;#export&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Magic flags are covered by the &lt;a href=&quot;https://nbdev.fast.ai/&quot;&gt;nbdev docs&lt;/a&gt; and &lt;a href=&quot;https://pete88b.github.io/fastpages/nbdev/fastai/jupyter/2020/06/02/nbdev-magic.html&quot;&gt;nbdev is getting a little %magic&lt;/a&gt; explains how to migrate existing projects to use magic flags etc.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Export-a-if-__name__-==-&amp;quot;__main__&amp;quot;-clause&quot;&gt;Export a &lt;code&gt;if __name__ == &quot;__main__&quot;&lt;/code&gt; clause&lt;a class=&quot;anchor-link&quot; href=&quot;#Export-a-if-__name__-==-&amp;quot;__main__&amp;quot;-clause&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;I'd recommend using &lt;a href=&quot;https://nbdev.fast.ai/tutorial/#Set-up-console-scripts&quot;&gt;console scripts&lt;/a&gt; wherever you can - but if you want your modules to run something when invoked directly, &lt;code&gt;if __name__ == &quot;__main__&quot;&lt;/code&gt; could be the answer.&lt;/p&gt;
&lt;p&gt;Anything you &lt;code&gt;%nbdev_export&lt;/code&gt; gets written to your .py - so you could write a cell like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_export&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nbdev.imports&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IN_NOTEBOOK&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IN_NOTEBOOK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vm&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IN_NOTEBOOK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Running &amp;quot;command line&amp;quot; logic ...&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We need the &lt;code&gt;not IN_NOTEBOOK&lt;/code&gt; check because &lt;code&gt;__name__ == &quot;__main__&quot;&lt;/code&gt; when running in a notebook&lt;/li&gt;
&lt;li&gt;We put the &lt;code&gt;IN_NOTEBOOK&lt;/code&gt; import in a try catch so that your module doesn't have a dependency on nbdev&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Use-multiple-flags-in-a-cell&quot;&gt;Use multiple flags in a cell&lt;a class=&quot;anchor-link&quot; href=&quot;#Use-multiple-flags-in-a-cell&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Most flags can be used in combination with other flags. Here's a couple of combinations that might be useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can hide input and collapse output with &lt;code&gt;%nbdev_hide_input&lt;/code&gt; and &lt;code&gt;%nbdev_collapse_output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You can hide a cell and specify a test flag with &lt;code&gt;%nbdev_hide&lt;/code&gt; and &lt;code&gt;%nbdev_slow_test&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: You can't put multiple flags on the same line.&lt;/p&gt;
&lt;p&gt;There are a few things that are not supported yet, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can collapse input or output &lt;em&gt;but not both&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;If nbdev finds both &lt;code&gt;%nbdev_collapse_input&lt;/code&gt; and &lt;code&gt;%nbdev_collapse_output&lt;/code&gt; it will ignore &lt;code&gt;%nbdev_collapse_output&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Remove-all-special-comments-/-flags-from-the-docs&quot;&gt;Remove all special comments / flags from the docs&lt;a class=&quot;anchor-link&quot; href=&quot;#Remove-all-special-comments-/-flags-from-the-docs&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;You might have seen special comments in your docs. This can happen if the special comment is not the 1st thing in the cell:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# hiding the input of this cell as the output is more important&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# collapse-hide&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# let&amp;#39;s run some code ...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;some_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;here&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This &amp;uarr; cell would get converted to &amp;darr; in the docs.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# collapse-hide&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# let&amp;#39;s run some code ...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;some_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;here&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Converting your project to use magic flags with &lt;code&gt;nbdev_upgrade&lt;/code&gt; would change the cell to:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# hiding the input of this cell as the output is more important&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_collapse_input&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# let&amp;#39;s run some code ...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;some_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;here&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which gets converted to &amp;darr; in the docs.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# let&amp;#39;s run some code ...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;some_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;here&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Write-to-a-module-that-is-created-&amp;quot;later&amp;quot;&quot;&gt;Write to a module that is created &quot;later&quot;&lt;a class=&quot;anchor-link&quot; href=&quot;#Write-to-a-module-that-is-created-&amp;quot;later&amp;quot;&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Lets say we have 2 notebooks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;00_core.ipynb&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Which contains &lt;code&gt;%nbdev_default_export core&lt;/code&gt; to create &lt;code&gt;core.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;01_data.ipynb&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Which contains &lt;code&gt;%nbdev_default_export data&lt;/code&gt; to create &lt;code&gt;data.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It used to be the case that writing a cell in &lt;code&gt;00_core.ipynb&lt;/code&gt; that exports to &lt;code&gt;data&lt;/code&gt; would cause problems:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_export&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_data_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;that_we_also_want_to_use&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;the core notebook&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nbdev is totally happy with this now.&lt;/p&gt;
&lt;p&gt;This change has also made it possible to use the same &lt;code&gt;%nbdev_default_export&lt;/code&gt; in multiple notebooks. I'm &lt;em&gt;not&lt;/em&gt; recommending that you do this but ... you can write to the same module from multiple notebooks.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Exclude-a-single-notebook-from-doc-builds&quot;&gt;Exclude a single notebook from doc builds&lt;a class=&quot;anchor-link&quot; href=&quot;#Exclude-a-single-notebook-from-doc-builds&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;You can do simple exclusions with glob. The following command include all .ipynb files unless they start with 2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nbdev_build_docs --fname=[!2]*.ipynb&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It's worth remembering that nbdev will ignore any file that starts with an underscore - I use this all the time with &lt;code&gt;_tmp&lt;/code&gt; in &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Hide-markdown-cells-from-the-docs&quot;&gt;Hide markdown cells from the docs&lt;a class=&quot;anchor-link&quot; href=&quot;#Hide-markdown-cells-from-the-docs&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Apart from &lt;code&gt;#hide&lt;/code&gt; and &lt;code&gt;%nbdev_hide&lt;/code&gt;, nbdev will ignore flags that are not in code cells.
This means that you can use markdown cells for &quot;developer-only&quot; details and &lt;code&gt;#hide&lt;/code&gt; them from the HTML docs.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Put-any-number-of-test-flags-in-a-cell&quot;&gt;Put any number of test flags in a cell&lt;a class=&quot;anchor-link&quot; href=&quot;#Put-any-number-of-test-flags-in-a-cell&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Lets say you have &lt;code&gt;tst_flags = slow|cuda&lt;/code&gt; in &lt;code&gt;settings.ini&lt;/code&gt; so that you can flag test as being slow or needing a GPU. If you need to flag a test as being both slow and needing a GPU, you can:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_slow_test&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_cuda_test&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tst_result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;long_running_fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Currently, only one test flag can be applied to all cells in a notebook. So if you had &amp;darr; only the slow test flag would be picked up:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_slow_test&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_cuda_test&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Create-code-coverage-reports&quot;&gt;Create code coverage reports&lt;a class=&quot;anchor-link&quot; href=&quot;#Create-code-coverage-reports&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;We can run tests in parallel and get coverage with &lt;a href=&quot;https://github.com/pytest-dev/pytest-cov&quot;&gt;pytest-cov&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you'd like to try this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install pytest-cov and its dependencies&lt;/li&gt;
&lt;li&gt;copy &lt;a href=&quot;https://github.com/pete88b/decision_tree/blob/master/test_nbs.py&quot;&gt;test_nbs.py&lt;/a&gt; to your nbdev project&lt;/li&gt;
&lt;li&gt;then run &lt;code&gt;pytest --cov=[your lib name]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to join &lt;a href=&quot;https://forums.fast.ai/t/nbdev-code-coverage-n-tests/73993/6&quot;&gt;the discussion&lt;/a&gt; (o:&lt;/p&gt;
&lt;h2 id=&quot;When-running-tests,-nbdev-runs-all-cells-in-a-notebook&quot;&gt;When running tests, nbdev runs all cells in a notebook&lt;a class=&quot;anchor-link&quot; href=&quot;#When-running-tests,-nbdev-runs-all-cells-in-a-notebook&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Currently, when you &lt;code&gt;nbdev_test_nbs&lt;/code&gt;, nbdev will run your notebooks from top to bottom.&lt;/p&gt;
&lt;p&gt;A consequence of this is that if you have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;00_core.ipynb&lt;/code&gt; that contains &lt;code&gt;%nbdev_default_export core&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nbdev_test_nbs --fname 00_core.ipynb&lt;/code&gt; will not test &lt;code&gt;core.py&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While &lt;a href=&quot;https://github.com/pete88b/decision_tree/blob/master/test_nbs.py&quot;&gt;test_nbs.py&lt;/a&gt; might look a little complicated, it means that &lt;code&gt;nbdev_test_nbs --fname 00_core.ipynb&lt;/code&gt; will test &lt;code&gt;core.py&lt;/code&gt; and you get accurate coverage data.&lt;/p&gt;
&lt;h2 id=&quot;Code-coverage-tells-you-what-you-definitely-haven't-tested,-not-what-you-have&quot;&gt;Code coverage tells you what you definitely haven't tested, not what you have&lt;a class=&quot;anchor-link&quot; href=&quot;#Code-coverage-tells-you-what-you-definitely-haven't-tested,-not-what-you-have&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;I really like this &amp;uarr; quote from &lt;a href=&quot;https://stackoverflow.com/questions/695811/pitfalls-of-code-coverage/695888#695888&quot;&gt;Mark Simpson&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While there are lots of good uses of coverage reports, I've seen them do more harm than good to projects when used as a strict quality measure. I really like the fastai style of writing tests that show how code can be used, then focusing on functional coverage.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Use-%nbdev_add2all-in-place-of-_all_&quot;&gt;Use &lt;code&gt;%nbdev_add2all&lt;/code&gt; in place of &lt;code&gt;_all_&lt;/code&gt;&lt;a class=&quot;anchor-link&quot; href=&quot;#Use-%nbdev_add2all-in-place-of-_all_&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Sometimes objects are not picked to be automatically added to the &lt;code&gt;__all__&lt;/code&gt; of the module so you will need to add them manually. To do so, create an exported cell with the following code &lt;code&gt;%nbdev_add2all &quot;name&quot;, &quot;name2&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Please note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;elements in &lt;code&gt;%nbdev_add2all&lt;/code&gt; can be space and/or comma separated and don't have to be quoted&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# &amp;#39;func&amp;#39;, &amp;#39;func2&amp;#39; and &amp;#39;func3&amp;#39; will be added to `__all__`&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_add2all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# you&amp;#39;ll see warnings if any unquoted function names can&amp;#39;t be found&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;elements on a new line will &lt;em&gt;not&lt;/em&gt; be added to &lt;code&gt;__all__&lt;/code&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# &amp;#39;func2&amp;#39; won&amp;#39;t get added to `__all__`&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_add2all&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;func&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;&amp;#39;func2&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;only the first &lt;code&gt;%nbdev_add2all&lt;/code&gt; in a cell will get picked up&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_add2all&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;func&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# `func2` won&amp;#39;t get added to `__all__`&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_add2all&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;func2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;but you can have any number of &lt;code&gt;%nbdev_add2all&lt;/code&gt;s in a notebook by putting them in different cells.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm &lt;em&gt;not&lt;/em&gt; recommending that you do this but ... as long as you have only one &lt;code&gt;_all_&lt;/code&gt; or &lt;code&gt;%nbdev_add2all&lt;/code&gt; in an exported cell, you can put any other code you like in this cell.&lt;/p&gt;
&lt;p&gt;For more exmaples, please see this &lt;a href=&quot;https://github.com/pete88b/decision_tree/blob/master/61_test_add2__all__.ipynb&quot;&gt;demo page&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Use-code-completion-when-adding-to-__all__&quot;&gt;Use code completion when adding to &lt;code&gt;__all__&lt;/code&gt;&lt;a class=&quot;anchor-link&quot; href=&quot;#Use-code-completion-when-adding-to-__all__&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;It used to be the case that using unquoted names in &lt;code&gt;_all_&lt;/code&gt; caused problems:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_export&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_all_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This &amp;uarr; will work fine now as names get quoted when writing to your library &amp;darr;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__all__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;other&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;things&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;you&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;have&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;exported&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;func&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;func2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;func3&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Import-anything-needed-by-show_doc&quot;&gt;Import anything needed by show_doc&lt;a class=&quot;anchor-link&quot; href=&quot;#Import-anything-needed-by-show_doc&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;When building docs, nbdev runs all &lt;code&gt;show_doc&lt;/code&gt; and &lt;code&gt;%nbdev_show_doc&lt;/code&gt; cells so that stale output doesn't make it into your docs.&lt;/p&gt;
&lt;p&gt;So that names are available when making &lt;code&gt;show_doc&lt;/code&gt; calls, nbdev runs cells containing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &quot;library import&quot; (zero indent import from current library) e.g. &lt;code&gt;from LIB_NAME.core import *&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If running these cells raises an exception, the build will stop.&lt;/p&gt;
&lt;p&gt;nbdev also runs cells containing zero indented imports. e.g.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from module import *&lt;/code&gt; or&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import module&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If running these cells raises an exception, the build will not stop.&lt;/p&gt;
&lt;p&gt;If you need to &lt;code&gt;show_doc&lt;/code&gt; something, please make sure it's imported via a cell that does not depend on previous cells being run. The easiest way to do this is to use a cell that contains nothing but imports.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Use-%nbdev_show_doc-to&quot;&gt;Use &lt;code&gt;%nbdev_show_doc&lt;/code&gt; to&lt;a class=&quot;anchor-link&quot; href=&quot;#Use-%nbdev_show_doc-to&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;For me, one of the best things about &lt;code&gt;show_doc&lt;/code&gt; is not having to use it (o: because nbdev automatically adds &lt;code&gt;show_doc&lt;/code&gt; for exported functions and classes.&lt;/p&gt;
&lt;p&gt;To make it possible to do everything via magic flags and provide a few shortcuts, we've added &lt;code&gt;%nbdev_show_doc&lt;/code&gt;. While &lt;code&gt;show_doc&lt;/code&gt; will most often be the best choice, here are a few ways in which &lt;code&gt;%nbdev_show_doc&lt;/code&gt; can help:&lt;/p&gt;
&lt;p&gt;Here are a few lines from &lt;a href=&quot;https://github.com/fastai/fastai2/blob/master/nbs/00_torch_core.ipynb&quot;&gt;00_torch_core.ipynb&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TitledInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title_level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TitledStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title_level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TitledFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title_level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That could be written with one &lt;code&gt;%nbdev_show_doc&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_show_doc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TitledInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TitledStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TitledFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title_level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here are some of the &lt;code&gt;DataLoaders&lt;/code&gt; &lt;code&gt;show_doc&lt;/code&gt; calls from &lt;a href=&quot;https://github.com/fastai/fastai2/blob/master/nbs/03_data.core.ipynb&quot;&gt;03_data.core.ipynb&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataLoaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;DataLoaders.train&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataLoaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;DataLoaders.valid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;&lt;p&gt;This &amp;uarr; is not typical fastai - which might make it a good time to quote Sylvain:&quot;I'm less convinced by &lt;code&gt;%nbdev_show_doc&lt;/code&gt; since it mostly seems useful for calling show_doc on several functions at once and we usually insert markdown between two show_doc calls&quot;.
Having said that (o: all of the &lt;code&gt;DataLoaders&lt;/code&gt; &lt;code&gt;show_doc&lt;/code&gt; calls could be written with one &lt;code&gt;%nbdev_show_doc&lt;/code&gt; &lt;em&gt;without&lt;/em&gt; having to pass &lt;code&gt;name=&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_show_doc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataLoaders&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__getitem__&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_ds&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valid_ds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Or even more succinctly as:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/fastpages/images/copied_from_nb/images/show_doc_with_wildcard.png&quot; alt=&quot;show_doc with wildcard&quot; style=&quot;max-width: 75%px&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;In the example above &amp;#8593;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;*&lt;/code&gt; tells nbdev_show_doc to show all public members but ...&lt;/li&gt;
&lt;li&gt;we dont show the output for all members here as it's quite a long list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more examples, please see this &lt;a href=&quot;https://github.com/pete88b/decision_tree/blob/master/51_test_show_doc.ipynb&quot;&gt;demo page&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Peter Butterfill</name></author><summary type="html"></summary></entry><entry><title type="html">nbdev is getting a little %magic</title><link href="https://pete88b.github.io/fastpages/nbdev/fastai/jupyter/2020/06/02/nbdev-magic.html" rel="alternate" type="text/html" title="nbdev is getting a little %magic" /><published>2020-06-02T00:00:00-05:00</published><updated>2020-06-02T00:00:00-05:00</updated><id>https://pete88b.github.io/fastpages/nbdev/fastai/jupyter/2020/06/02/nbdev-magic</id><content type="html" xml:base="https://pete88b.github.io/fastpages/nbdev/fastai/jupyter/2020/06/02/nbdev-magic.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-06-02-nbdev-magic.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Overview&quot;&gt;Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Overview&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;nbdev is progressively getting magic commands that will eventually replace the special comments it currently uses, so you get autocomplete and documentation:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/fastpages/images/copied_from_nb/images/nbdev-magic.gif&quot; alt=&quot;magic animation&quot; style=&quot;max-width: 75%px&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;You'll also get feedback when flags are used incorrectly:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/fastpages/images/copied_from_nb/images/nbdev-magic-usage-error.png&quot; alt=&quot;magic usage error&quot; style=&quot;max-width: 75%px&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;How-do-I-start-using-magic-flags?&quot;&gt;How do I start using magic flags?&lt;a class=&quot;anchor-link&quot; href=&quot;#How-do-I-start-using-magic-flags?&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Grab an &lt;a href=&quot;https://github.com/fastai/nbdev/#installing&quot;&gt;editable install of nbdev&lt;/a&gt; then run &lt;code&gt;nbdev_upgrade&lt;/code&gt; from the command line - this will update notebooks that use comment flags like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#export special.module&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to use magic flags:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_export&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;special&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make magic flags work, &lt;code&gt;nbdev_upgrade&lt;/code&gt; might need to add a new code cell to the top of the notebook:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nbdev&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can run &lt;code&gt;nbdev_upgrade&lt;/code&gt; any number of times - which means you can update the same project every time new magic flags get added to nbdev.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Can-I-use-both-comment-and-magic-flags?&quot;&gt;Can I use both comment and magic flags?&lt;a class=&quot;anchor-link&quot; href=&quot;#Can-I-use-both-comment-and-magic-flags?&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Both comment and magic flags are currently supported and you can use both kinds in the same notebook.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Why-can't-I-see-any-&amp;quot;test&amp;quot;-flags?&quot;&gt;Why can't I see any &quot;test&quot; flags?&lt;a class=&quot;anchor-link&quot; href=&quot;#Why-can't-I-see-any-&amp;quot;test&amp;quot;-flags?&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;If you don't see the test flags you need ...&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/fastpages/images/copied_from_nb/images/tab-complete-no-test.png&quot; alt=&quot;auto complete no test&quot; style=&quot;max-width: 55%px&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;... you'll probably need to update &lt;code&gt;settings.ini&lt;/code&gt; then restart your notebook.&lt;/p&gt;
&lt;p&gt;Test flags are configured in your &lt;code&gt;settings.ini&lt;/code&gt; (set &lt;code&gt;tst_flags&lt;/code&gt;, separating flags by a &lt;code&gt;|&lt;/code&gt; if you have several of them).&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;nbdev.flags&lt;/code&gt; module is imported, test flags are created dynamically from your settings.ini. If &lt;code&gt;tst_flags=slow|gpu&lt;/code&gt;, the following flags would be available:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_slow_test&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbdev_gpu_test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Can-I-use-flags-in-any-kind-of-cell?&quot;&gt;Can I use flags in any kind of cell?&lt;a class=&quot;anchor-link&quot; href=&quot;#Can-I-use-flags-in-any-kind-of-cell?&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Apart from &lt;code&gt;#hide&lt;/code&gt; and &lt;code&gt;%nbdev_hide&lt;/code&gt;, nbdev will ignore flags that are not in code cells.
This means that you can use markdown cells for &quot;developer-only&quot; details and &lt;code&gt;#hide&lt;/code&gt; them from the HTML docs.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Do-magic-flags-work-differently-to-comment-flags?&quot;&gt;Do magic flags work differently to comment flags?&lt;a class=&quot;anchor-link&quot; href=&quot;#Do-magic-flags-work-differently-to-comment-flags?&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Ideally, they would work the same but ... there is a difference when nbdev splits the source of a cell into flags and code;&lt;/p&gt;
&lt;p&gt;If no magic flags are found, treat the first comment line as a flag&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/fastpages/images/copied_from_nb/images/split_flags_and_code.png&quot; alt=&quot;split_flags_and_code example&quot; style=&quot;max-width: 450px&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;If magic flags are found, the flags part can contain multiple lines&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/fastpages/images/copied_from_nb/images/split_flags_and_code_magic.png&quot; alt=&quot;split_flags_and_code example&quot; style=&quot;max-width: 450px&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;This could make a difference because nbdev writes just the code part to both your library and HTML docs.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;How-do-comment-flags-correspond-to-magic-flags?&quot;&gt;How do comment flags correspond to magic flags?&lt;a class=&quot;anchor-link&quot; href=&quot;#How-do-comment-flags-correspond-to-magic-flags?&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;Comment flag&lt;/th&gt;
&lt;th&gt;Magic flag&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;default_exp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_default_export&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Define the name of the module everything should be exported in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;exports&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_export_and_show&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Export and show code in the docs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;exporti&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_export_internal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Export but don’t show in docs and don’t add to &lt;code&gt;__all__&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;/fastpages/images/copied_from_nb/export&quot;&gt;&lt;code&gt;export&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_export&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Export but don’t show in docs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hide_input&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_hide_input&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do not show input of a test cell in docs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hide_output&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_hide_output&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do not show output of a test cell in docs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_hide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do not show a test cell or markdown in docs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;default_cls_lvl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_default_class_level&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Define the default toc level of classes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;collapse_output&lt;/code&gt; or &lt;code&gt;collapse-output&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_collapse_output&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Inlcude output in the docs under a collapsable element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;collapse_show&lt;/code&gt; or &lt;code&gt;collapse-show&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_collapse_input open&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Inlcude intput in the docs under a collapsable element that is open by default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;collapse_hide&lt;/code&gt; or &lt;code&gt;collapse-hide&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_collapse_input&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Inlcude intput in the docs under a collapsable element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;collapse&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nbdev_collapse_input&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Inlcude intput in the docs under a collapsable element&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Why-might-we-add-magic-flags-for-_all_-and-show_doc?&quot;&gt;Why might we add magic flags for &lt;code&gt;_all_&lt;/code&gt; and &lt;code&gt;show_doc&lt;/code&gt;?&lt;a class=&quot;anchor-link&quot; href=&quot;#Why-might-we-add-magic-flags-for-_all_-and-show_doc?&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;One of the reasons for suggesting this is so that everything can be done via magic flags - rather than using flags for everything except &lt;code&gt;_all_&lt;/code&gt; and &lt;code&gt;show_doc&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;%nbev_add2__all__&quot;&gt;&lt;code&gt;%nbev_add2__all__&lt;/code&gt;&lt;a class=&quot;anchor-link&quot; href=&quot;#%nbev_add2__all__&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;here's what we do today&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_all_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;progress_bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;master_bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;but we could ...&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;nbev_add2__all__&lt;/span&gt; progress_bar,master_bar
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;This flag could&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;check that everything exists and names are valid (when the cell is executed) and &lt;/li&gt;
&lt;li&gt;make it possible to tab-complete the items you're adding to &lt;code&gt;__all__&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/fastpages/images/copied_from_nb/images/add2all.png&quot; alt=&quot;add to all&quot; style=&quot;max-width: 55%px&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The example above uses a line magic, so you'd have to move everything on line 3 up to line 2 but ... we could use a cell magic&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;%nbev_show_doc&quot;&gt;&lt;code&gt;%nbev_show_doc&lt;/code&gt;&lt;a class=&quot;anchor-link&quot; href=&quot;#%nbev_show_doc&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;here's what we do today&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# nbdev removes show_doc cells, so we need to use a alias &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;show__doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show_doc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show__doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ne&quot;&gt;ArithmeticError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_markdown rendered_html output_subarea &quot;&gt;
&lt;h2 id=&quot;ArithmeticError&quot; class=&quot;doc_header&quot;&gt;&lt;code&gt;class&lt;/code&gt; &lt;code&gt;ArithmeticError&lt;/code&gt;&lt;a href=&quot;&quot; class=&quot;source_link&quot; style=&quot;float:right&quot;&gt;[source]&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;ArithmeticError&lt;/code&gt;() :: &lt;code&gt;Exception&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Base class for arithmetic errors.&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show__doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ne&quot;&gt;ArithmeticError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mro&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_markdown rendered_html output_subarea &quot;&gt;
&lt;h4 id=&quot;ArithmeticError.mro&quot; class=&quot;doc_header&quot;&gt;&lt;code&gt;ArithmeticError.mro&lt;/code&gt;&lt;a href=&quot;&quot; class=&quot;source_link&quot; style=&quot;float:right&quot;&gt;[source]&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;ArithmeticError.mro&lt;/code&gt;()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Return a type's method resolution order.&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show__doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ne&quot;&gt;ArithmeticError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_markdown rendered_html output_subarea &quot;&gt;
&lt;h4 id=&quot;ArithmeticError.__init__&quot; class=&quot;doc_header&quot;&gt;&lt;code&gt;ArithmeticError.__init__&lt;/code&gt;&lt;a href=&quot;&quot; class=&quot;source_link&quot; style=&quot;float:right&quot;&gt;[source]&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;ArithmeticError.__init__&lt;/code&gt;(&lt;strong&gt;*&lt;code&gt;args&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;**&lt;code&gt;kwargs&lt;/code&gt;&lt;/strong&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Initialize self.  See help(type(self)) for accurate signature.&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;but we could ...&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;nbev_show_doc&lt;/span&gt; ArithmeticError mro __init__
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_markdown rendered_html output_subarea &quot;&gt;
&lt;h2 id=&quot;ArithmeticError&quot; class=&quot;doc_header&quot;&gt;&lt;code&gt;class&lt;/code&gt; &lt;code&gt;ArithmeticError&lt;/code&gt;&lt;a href=&quot;&quot; class=&quot;source_link&quot; style=&quot;float:right&quot;&gt;[source]&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;ArithmeticError&lt;/code&gt;() :: &lt;code&gt;Exception&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Base class for arithmetic errors.&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_markdown rendered_html output_subarea &quot;&gt;
&lt;h4 id=&quot;ArithmeticError.mro&quot; class=&quot;doc_header&quot;&gt;&lt;code&gt;ArithmeticError.mro&lt;/code&gt;&lt;a href=&quot;&quot; class=&quot;source_link&quot; style=&quot;float:right&quot;&gt;[source]&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;ArithmeticError.mro&lt;/code&gt;()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Return a type's method resolution order.&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_markdown rendered_html output_subarea &quot;&gt;
&lt;h4 id=&quot;ArithmeticError.__init__&quot; class=&quot;doc_header&quot;&gt;&lt;code&gt;ArithmeticError.__init__&lt;/code&gt;&lt;a href=&quot;&quot; class=&quot;source_link&quot; style=&quot;float:right&quot;&gt;[source]&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;ArithmeticError.__init__&lt;/code&gt;(&lt;strong&gt;*&lt;code&gt;args&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;**&lt;code&gt;kwargs&lt;/code&gt;&lt;/strong&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Initialize self.  See help(type(self)) for accurate signature.&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;This flag could make it possible to &quot;show doc&quot; a class and any number of its methods with a single line of code.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Peter Butterfill</name></author><summary type="html"></summary></entry><entry><title type="html">An Example Markdown Post</title><link href="https://pete88b.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html" rel="alternate" type="text/html" title="An Example Markdown Post" /><published>2020-01-14T00:00:00-06:00</published><updated>2020-01-14T00:00:00-06:00</updated><id>https://pete88b.github.io/fastpages/markdown/2020/01/14/test-markdown-post</id><content type="html" xml:base="https://pete88b.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html">&lt;h1 id=&quot;example-markdown-post&quot;&gt;Example Markdown Post&lt;/h1&gt;

&lt;h2 id=&quot;basic-setup&quot;&gt;Basic setup&lt;/h2&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-filename.md&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;highlighter-rouge&quot;&gt;filename&lt;/code&gt; is whatever file name you choose, to remind yourself what this post is about. &lt;code class=&quot;highlighter-rouge&quot;&gt;.md&lt;/code&gt; is the file extension for markdown files.&lt;/p&gt;

&lt;p&gt;The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “&lt;em&gt;level 1 heading&lt;/em&gt;” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line &lt;code class=&quot;highlighter-rouge&quot;&gt;## File names&lt;/code&gt; above.&lt;/p&gt;

&lt;h2 id=&quot;basic-formatting&quot;&gt;Basic formatting&lt;/h2&gt;

&lt;p&gt;You can use &lt;em&gt;italics&lt;/em&gt;, &lt;strong&gt;bold&lt;/strong&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;code font text&lt;/code&gt;, and create &lt;a href=&quot;https://www.markdownguide.org/cheat-sheet/&quot;&gt;links&lt;/a&gt;. Here’s a footnote &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Here’s a horizontal rule:&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;lists&quot;&gt;Lists&lt;/h2&gt;

&lt;p&gt;Here’s a list:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;item 1&lt;/li&gt;
  &lt;li&gt;item 2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And a numbered list:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;item 1&lt;/li&gt;
  &lt;li&gt;item 2&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;boxes-and-stuff&quot;&gt;Boxes and stuff&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a quotation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;Toast Toast--warning googoo&quot;&gt;
   &lt;span class=&quot;Toast-icon&quot;&gt;&lt;svg class=&quot;octicon octicon-alert&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 000 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 00.01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;
   &lt;span class=&quot;Toast-content&quot;&gt;You can include alert boxes&lt;/span&gt;
&lt;/div&gt;

&lt;p&gt;…and…&lt;/p&gt;

&lt;div class=&quot;Toast&quot;&gt;
   &lt;span class=&quot;Toast-icon&quot;&gt;&lt;svg class=&quot;octicon octicon-info&quot; viewBox=&quot;0 0 14 16&quot; version=&quot;1.1&quot; width=&quot;14&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M6.3 5.69a.942.942 0 01-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 01-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;
   &lt;span class=&quot;Toast-content&quot;&gt;You can include info boxes&lt;/span&gt;
&lt;/div&gt;

&lt;h2 id=&quot;images&quot;&gt;Images&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/fastpages/images/logo.png&quot; alt=&quot;&quot; title=&quot;fast.ai's logo&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;

&lt;p&gt;You can format text and code per usual&lt;/p&gt;

&lt;p&gt;General preformatted text:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Do a thing
do_thing()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Python code and output:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Prints '2'
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Formatting text as shell commands:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
./some_script.sh &lt;span class=&quot;nt&quot;&gt;--option&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;
wget https://example.com/cat_photo1.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Formatting text as YAML:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;value&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;another_key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;another&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;value&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tables&quot;&gt;Tables&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Column 1&lt;/th&gt;
      &lt;th&gt;Column 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;A thing&lt;/td&gt;
      &lt;td&gt;Another thing&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;tweetcards&quot;&gt;Tweetcards&lt;/h2&gt;

&lt;div class=&quot;jekyll-twitter-plugin&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Altair 4.0 is released! &lt;a href=&quot;https://t.co/PCyrIOTcvv&quot;&gt;https://t.co/PCyrIOTcvv&lt;/a&gt;&lt;br /&gt;Try it with:&lt;br /&gt;&lt;br /&gt;  pip install -U altair&lt;br /&gt;&lt;br /&gt;The full list of changes is at &lt;a href=&quot;https://t.co/roXmzcsT58&quot;&gt;https://t.co/roXmzcsT58&lt;/a&gt; ...read on for some highlights. &lt;a href=&quot;https://t.co/vWJ0ZveKbZ&quot;&gt;pic.twitter.com/vWJ0ZveKbZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jake VanderPlas (@jakevdp) &lt;a href=&quot;https://twitter.com/jakevdp/status/1204765621767901185?ref_src=twsrc%5Etfw&quot;&gt;December 11, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;This is the footnote. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Example Markdown Post</summary></entry></feed>